#include "jsvkHelpers.h"

namespace jsvk {
	std::string errorString(VkResult errorCode)
	{
		switch (errorCode)
		{
			CONVERT_ERROR_TO_MESSAGE(NOT_READY);
			CONVERT_ERROR_TO_MESSAGE(TIMEOUT);
			CONVERT_ERROR_TO_MESSAGE(EVENT_SET);
			CONVERT_ERROR_TO_MESSAGE(EVENT_RESET);
			CONVERT_ERROR_TO_MESSAGE(INCOMPLETE);
			CONVERT_ERROR_TO_MESSAGE(ERROR_OUT_OF_HOST_MEMORY);
			CONVERT_ERROR_TO_MESSAGE(ERROR_OUT_OF_DEVICE_MEMORY);
			CONVERT_ERROR_TO_MESSAGE(ERROR_INITIALIZATION_FAILED);
			CONVERT_ERROR_TO_MESSAGE(ERROR_DEVICE_LOST);
			CONVERT_ERROR_TO_MESSAGE(ERROR_MEMORY_MAP_FAILED);
			CONVERT_ERROR_TO_MESSAGE(ERROR_LAYER_NOT_PRESENT);
			CONVERT_ERROR_TO_MESSAGE(ERROR_EXTENSION_NOT_PRESENT);
			CONVERT_ERROR_TO_MESSAGE(ERROR_FEATURE_NOT_PRESENT);
			CONVERT_ERROR_TO_MESSAGE(ERROR_INCOMPATIBLE_DRIVER);
			CONVERT_ERROR_TO_MESSAGE(ERROR_TOO_MANY_OBJECTS);
			CONVERT_ERROR_TO_MESSAGE(ERROR_FORMAT_NOT_SUPPORTED);
			CONVERT_ERROR_TO_MESSAGE(ERROR_SURFACE_LOST_KHR);
			CONVERT_ERROR_TO_MESSAGE(ERROR_NATIVE_WINDOW_IN_USE_KHR);
			CONVERT_ERROR_TO_MESSAGE(SUBOPTIMAL_KHR);
			CONVERT_ERROR_TO_MESSAGE(ERROR_OUT_OF_DATE_KHR);
			CONVERT_ERROR_TO_MESSAGE(ERROR_INCOMPATIBLE_DISPLAY_KHR);
			CONVERT_ERROR_TO_MESSAGE(ERROR_VALIDATION_FAILED_EXT);
			CONVERT_ERROR_TO_MESSAGE(ERROR_INVALID_SHADER_NV);
		default:
			return "UNKNOWN_ERROR";
		}
	}
}